250220
-- 250220
-- 교과서 239,240

-- 1 
-- 안시조인
select d.deptno,dname,empno,ename,sal
from emp e inner join dept d
on e.deptno = d.deptno 
where sal > 2000
order by d.deptno asc ,sal asc;

select d.deptno,dname,empno,ename,sal
from emp e, dept d
where e.deptno = d.deptno
and sal > 2000
order by d.deptno asc;


-- 2
select d.deptno,dname,trunc(avg(sal)),max(sal),min(sal),count(*)
from emp e, dept d
where e.deptno = d.deptno
group by d.deptno, dname
order by d.deptno;

--안시조인
select d.deptno,dname,trunc(avg(sal)),max(sal),min(sal),count(*)
from emp e inner join dept d
on e.deptno = d.deptno
group by d.deptno, dname
order by d.deptno;

-- 3
select d.deptno,dname,empno,ename,job,sal
from emp e, dept d
where e.deptno(+) = d.deptno
order by deptno asc;

--안시조인
select d.deptno,dname,empno,ename,job,sal
from emp e right outer join dept d
on e.deptno = d.deptno
order by deptno asc;

-- 4
select d.deptno,dname,e.empno,e.ename,e.mgr,e.sal,e.deptno,losal,hisal,grade,m.ename
from emp e, dept d, salgrade s, emp m
where e.deptno(+) = d.deptno 
and e.sal >= s.losal (+)
and e.sal <= s.hisal (+)
-- and e.sal between s.losal(+) and s.hisal (+) between 사용시 위 식2줄이 1줄로 변함
and e.mgr = m.empno (+) 
order by d.deptno;

-- 안시조인
select d.deptno,dname,e.empno,e.ename,e.mgr,e.sal,e.deptno,losal,hisal,grade,m.ename
from emp e right outer join dept d
on e.deptno = d.deptno 
left outer join salgrade s
on e.sal between s.losal and s.hisal
left outer join emp m
on e.mgr = m.empno 
order by d.deptno;

-- 급여를 가장 많이 받는 사원의 이름과 금액 조회

select ename, max(sal)
from emp;

select ename,sal
from emp
where sal >= 5000;

-- 해당 부서별 평균 급여보다 해당 부서에서 급여가 높은 사람 

-- 서브쿼리(sub query)
-- 하나의 Query select 구문을 여러번 정의 하는것
-- 형식
-- 스칼라 서브쿼리 : select 절에서 사용
-- 인라인 뷰 : from절에서 사용
-- 중첩서브 쿼리 : where 절, having 절에서 사용

-- 결과의 개수
-- 단일행 서브쿼리( <,>,=,!=,<=,>=) : 나온 값이 1개일 떄
-- 다중행 서브쿼리(any,in,all,some,exists) : 나온 값이 여러개 일 떄
-- 다중열 서브쿼리

-- 동작 방식
-- 비연관 서브쿼리
-- 연관 서브쿼리



select ename,sal
from emp
where sal >= (
    select max(sal)
    from emp
);

select ename,sal
from emp
where sal > (
    select sal
    from emp
    where ename = 'SCOTT');

select empno,ename,sal,dname,loc
from emp e inner join dept d
on e.deptno = d.deptno
where d.deptno = 20
and e.sal > (
    select avg(sal)
    from emp
    );

select *
from emp
where deptno = 20 or deptno = 30;

select *
from emp
where deptno in (20,30);

from mep 
group by deptno

-- in 
select *
from emp
where sal in(
    select max(sal)
    from emp
    group by deptno
    );

-- any 비교연산자와 같이 사용한다
-- 다중행 결과의 가장 작은값으로 판단한다
select *
from emp
where sal > any(
    select max(sal)
    from emp
    group by deptno
    );

-- all : 연산자는 다중행 결과의 가장 큰값으로 판단한다
select *
from emp
where sal > all(
    select sal
    from emp
    where deptno = 30
    );

select *
from emp
where sal >= all(
    select sal
    from emp
    where deptno = 30
    );

-- exists연산

select *    --메인서브쿼리
from emp
where exists(   --중첩서브쿼리
    select dname
    from dept
    where deptno = 10
    )
and deptno = 10;

select * 
from emp
where(deptno,sal) in(
        select deptno,max(sal)
        from emp
        group by deptno
);

-- 연관서브 쿼리문
select *
from emp e1
where e1.sal >(
select avg(e2.sal)  --중첩,단일행,연관서브 쿼리
from emp e2
where deptno = e1.deptno
);

-- 인라인 뷰

select ename,sal,e.deptno,dname,loc
from (
        select * 
        from emp
        where deptno = 10
    ) e inner join dept d
on e.deptno = d.deptno;

with
e as(select * from emp where deptno = 10),
d as(select * from deptno)

select ename,sal,e.deptno,dname,loc
from e inner join d
on e.deptno = d.deptno;

select ename,sal,e.deptno,
    (select dname from dept where deptno = e.deptno) as dname,
    (select loc from dept where deptno = e.deptno) as loc
from emp e;

-- 사번,이름,매니저 이름,부서이름
-- job이 manager인 사원

select a.empno,a.ename,a.job,a.deptno,b.ename,
( select dname from dept d 
    where a.deptno = d.deptno ) as dept_name
from emp a,( select empno,ename
            from emp)b
where a.mgr = b.empno             
and a.deptno in (
            select aa.deptno
            from emp aa
            where aa.job = 'MANAGER'
);

select a.empno,a.ename,a.job,a.deptno,b.ename,
( select dname from dept d 
    where a.deptno = d.deptno ) as dept_name
from emp a,( select empno,ename
            from emp)b
where a.mgr = b.empno             
and a.job = (
            select distinct aa.job
            from emp aa
            where aa.job = 'MANAGER'
);

-- 262 

-- 1
select job, empno, ename, sal,deptno,dname
from emp e inner join dept d
using(deptno)
where job = (
    select job
    from emp
    where ename = 'ALLEN'
    );

-- 2

select empno,ename,d.dname,hiredate,loc,sal,grade
from emp e inner join dept d
on e.deptno = d.deptno
inner join salgrade s
on e.sal between s.losal and s.hisal
where sal > (
    select avg(sal)
    from emp
    )
order by sal desc, empno;

-- 3

select empno,ename,job,e.deptno,dname,loc
from emp e inner join dept d
on e.deptno = d.deptno 
where e.deptno = 10
and job not in (
    select job
    from emp
    where deptno = 30
    );

-- 4 단일행 서브쿼리
select empno,ename,sal,grade
from emp e inner join salgrade s
on e.sal between s.losal and s.hisal
where sal >  (
    select max(sal)
    from emp
    where job = 'SALESMAN'
    );
    
-- 다중행 서브쿼리
select empno,ename,sal,grade
from emp e inner join salgrade s
on e.sal between s.losal and s.hisal
where sal > ALL  (
    select sal
    from emp
    where job = 'SALESMAN'
    )
order by empno desc;

--in 그 중하나
--any
--some
--all 그중 가장 큰
--exists 서브쿼리가 존재하냐 안하냐로 메인 쿼리가 실행 하는가


create table dept_copy
as
select * from dept;






